{"version":3,"sources":["webpack://gatsby-shopify-course/./src/components/Filters/CategoryFilterItem/styles.js","webpack://gatsby-shopify-course/./src/components/Filters/CategoryFilterItem/index.js","webpack://gatsby-shopify-course/./src/components/Filters/styles.js","webpack://gatsby-shopify-course/./src/components/Filters/index.js","webpack://gatsby-shopify-course/./src/components/LayoutBoutique/index.js","webpack://gatsby-shopify-course/./src/components/aside/index.js","webpack://gatsby-shopify-course/./src/pages/produits.js"],"names":["CategoryFilterItemWrapper","styled","CategoryFilterItem","title","id","search","useLocation","qs","queryString","collectionIds","c","split","filter","checked","find","cId","searchTerm","s","onClick","newIds","map","encodeURIComponent","push","length","navigate","navigateTo","join","FiltersWrapper","Filters","data","useStaticQuery","className","allShopifyCollection","edges","node","key","shopifyId","LayoutBoutique","children","Aside","React","ProductContext","products","collections","collectionProductMap","selectedCollectionIds","selectedCollectionIdsMap","forEach","collectionId","collection","product","filteredProducts","Object","keys","toLowerCase","indexOf","alt","src","AllProducts","useState","isExpanded","toggleExpansion","description"],"mappings":"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","file":"component---src-pages-produits-js.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CategoryFilterItemWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n  cursor: pointer;\n  color:#707070;\n\n  > div:last-child {\n    padding-left: 8px;\n  }\n`;\n","import React from 'react';\nimport { Checkbox } from 'components';\nimport { navigate, useLocation } from '@reach/router';\nimport { CategoryFilterItemWrapper } from './styles';\nimport queryString from 'query-string';\n\nexport function CategoryFilterItem({ title, id }) {\n  const { search } = useLocation();\n  const qs = queryString.parse(search);\n  const collectionIds = qs.c?.split(',').filter(c => !!c) || [];\n  const checked = collectionIds?.find(cId => cId === id);\n  const searchTerm = qs.s;\n\n  const onClick = () => {\n    let navigateTo = '/produits';\n\n    let newIds = [];\n\n    if (checked) {\n      newIds = collectionIds\n        .filter(cId => cId !== id)\n        .map(cId => encodeURIComponent(cId));\n    } else {\n      collectionIds.push(id);\n      newIds = collectionIds.map(cId => encodeURIComponent(cId));\n    }\n\n    if (newIds.length && !searchTerm) {\n      navigate(`${navigateTo}?c=${newIds.join(',')}`);\n    } else if (newIds.length && !!searchTerm) {\n      navigate(\n        `${navigateTo}?c=${newIds.join(',')}&s=${encodeURIComponent(\n          searchTerm\n        )}`\n      );\n    } else if (!newIds.length && !!searchTerm) {\n      navigate(`${navigateTo}?s=${encodeURIComponent(searchTerm)}`);\n    } else {\n      navigate(`${navigateTo}`);\n    }\n  };\n  return (\n    <CategoryFilterItemWrapper onClick={onClick}>\n      <Checkbox checked={checked} />\n      <div>{title}</div>\n    </CategoryFilterItemWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FiltersWrapper = styled.div`\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { CategoryFilterItem } from './CategoryFilterItem';\nimport { FiltersWrapper } from './styles';\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport function Filters() {\n  const data = useStaticQuery(graphql`\n  {\n    allShopifyCollection(\n      sort: {fields: title, order: ASC}\n      filter: {products: {elemMatch: {productType: {glob: \"Boutique\"}, availableForSale: {eq: true}}}}\n      ) {\n      edges {\n        node {\n          products {\n            ...ShopifyProductFields\n            ...ProductTileFields\n          }\n          title\n          description\n          shopifyId\n        }\n      }\n    }\n  }\n`)\n  return (\n    <FiltersWrapper>\n      <div className=' title-categorie DancingScript font-bold mb-6'>Types de produits</div>\n      {data.allShopifyCollection.edges.map(({ node }) => (\n\n        <CategoryFilterItem\n          title={node.title}\n          key={node.shopifyId}\n          id={node.shopifyId}\n          className=' title-categorie font-bold text-centermb-6'></CategoryFilterItem>\n\n      ))}\n\n    </FiltersWrapper>\n\n  );\n}\n","//import { fromJSON } from 'postcss';\nimport React from 'react';\nimport HeaderBoutique from '../HeaderBoutique'\nimport { Footer } from '../footer/';\nimport \"@fontsource/roboto\"\nimport \"@fontsource/dancing-script\"\nconst LayoutBoutique = ({ children }) => {\n  return (\n    <>\n          <div className=\"site min-h-screen flex flex-col \">\n\n      <HeaderBoutique/>\n        <main className=\"mt-10 md:mt-0\">{children} </main>\n        <Footer />\n        </div>\n    </>\n  );\n};\n\nexport { LayoutBoutique };\n","import React from 'react';\nimport { Filters,  } from '../Filters';\nimport { Search } from '../Search'\nimport queryString from 'query-string';\nimport { useLocation } from '@reach/router';\nimport ProductContext from '../../context/ProductContext';\n\nexport function Aside(){\n\n    const { products, collections } = React.useContext(ProductContext);\n    const collectionProductMap = {};\n    const { search } = useLocation();\n    const qs = queryString.parse(search);\n    const selectedCollectionIds = qs.c?.split(',').filter(c => !!c) || [];\n    const selectedCollectionIdsMap = {};\n    const searchTerm = qs.s;\n  \n    selectedCollectionIds.forEach(collectionId => {\n      selectedCollectionIdsMap[collectionId] = true;\n    });\n  \n    if (collections) {\n      collections.forEach(collection => {\n        collectionProductMap[collection.shopifyId] = {};\n  \n        collection.products.forEach(product => {\n          collectionProductMap[collection.shopifyId][product.shopifyId] = true;\n        });\n      });\n    }\n  \n    const filterByCategory = product => {\n      if (Object.keys(selectedCollectionIdsMap).length) {\n        for (let key in selectedCollectionIdsMap) {\n          if (collectionProductMap[key]?.[product.shopifyId]) {\n            return true;\n          }\n        }\n        return false;\n      }\n  \n      return true;\n    };\n  \n    const filterBySearchTerm = product => {\n      if (searchTerm) {\n        return product.title.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n      }\n  \n      return true;\n    };\n  \n    const filteredProducts = products\n      .filter(filterByCategory)\n      .filter(filterBySearchTerm);\n\n\n    return( \n        <aside className=' text-left hidden md:flex   md:flex-col content-center  pr-4 '>\n          \n          <img className='w-5/6 mx-auto mb-5 mt-3 ' alt=\"accueil\" src=\"https://res.cloudinary.com/anthow/image/upload/v1619966610/Coccinelles%20et%20compagnies/logo-boutique_bgsvny.svg\"/>\n<div className=\"mb-2 align-center\">\n<Search />\n</div>\n<div className=\"pl-2\">\n{!!searchTerm && !!filteredProducts.length && (\n        <p>\n          Recherche pour: <strong>'{searchTerm}'</strong>\n        </p>\n      )}\n        <Filters />\n        {!filteredProducts.length && (\n          <div className=\"text-center mt-5\">\n              <p className=\"\">aucun article trouvé pour</p>\n              &nbsp;\n              <strong className=\"title-categorie\">'{searchTerm}'</strong>\n            \n           \n          </div>\n        )}\n        </div>\n</aside>\n\n\n\n    );\n}\n","import React, { useState } from 'react'\n//  import { graphql } from 'gatsby';\nimport {  ProductsGrid, SEO } from 'components';\nimport{LayoutBoutique} from '../components/LayoutBoutique'\nimport { Aside } from 'components/aside'\nimport ProductContext from 'context/ProductContext';\nimport queryString from 'query-string';\nimport { useLocation } from '@reach/router';\nimport { Filters } from '../components/Filters'\n\nexport default function AllProducts() {\n  const { products, collections } = React.useContext(ProductContext);\n  const collectionProductMap = {};\n  const { search } = useLocation();\n  const qs = queryString.parse(search);\n  const selectedCollectionIds = qs.c?.split(',').filter(c => !!c) || [];\n  const selectedCollectionIdsMap = {};\n  const searchTerm = qs.s;\n\n  selectedCollectionIds.forEach(collectionId => {\n    selectedCollectionIdsMap[collectionId] = true;\n  });\n\n  if (collections) {\n    collections.forEach(collection => {\n      collectionProductMap[collection.shopifyId] = {};\n\n      collection.products.forEach(product => {\n        collectionProductMap[collection.shopifyId][product.shopifyId] = true;\n      });\n    });\n  }\n\n  const filterByCategory = product => {\n    if (Object.keys(selectedCollectionIdsMap).length) {\n      for (let key in selectedCollectionIdsMap) {\n        if (collectionProductMap[key]?.[product.shopifyId]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  const filterBySearchTerm = product => {\n    if (searchTerm) {\n      return product.title.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0;\n    }\n\n    return true;\n  };\n\n  const filteredProducts = products\n    .filter(filterByCategory)\n    .filter(filterBySearchTerm);\n    const [isExpanded, toggleExpansion] = useState(false)\n  return (\n    <LayoutBoutique>\n      <SEO\n        description=\"Coccinelles et compagnie\"\n        title=\"tout les produits\"\n      />\n  <section className='flex flex-col md:flex-row content-center space-x-4 w-12/12'>\n  \n\n\n<Aside />\n<div className=\" mt-10 md:mt-5 \">\n<button  className=\"  md:hidden hover:opacity-80 block p-2 ml-3 mb-5 text-xl w-1/3 buy-boutique whitespace-nowrap rounded-full text-white\"  onClick={() => toggleExpansion(!isExpanded)}>\n          catégories\n        </button>\n\n<div  className={`${\n              isExpanded ? `block` : `hidden`\n            } mb-5 md:block md:hidden md:flex md:items-center w-full md:w-auto ml-auto`}\n          >\n  <Filters />\n</div>\n\n  <h2 className=\"DancingScript mb-5 text-4xl\"> Produits</h2>\n        {!!filteredProducts.length && (\n  <div className=\"flex-grow \">\n  <ProductsGrid products={filteredProducts} />\n          </div>\n        )}\n                  </div>\n\n      </section>\n    </LayoutBoutique>\n  );\n}\n\n\n"],"sourceRoot":""}