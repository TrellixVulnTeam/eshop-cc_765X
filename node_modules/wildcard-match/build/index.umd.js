!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(r="undefined"!=typeof globalThis?globalThis:r||self).wcmatch=e()}(this,(function(){"use strict";function r(r){return"-"===r||"^"===r||"$"===r||"+"===r||"."===r||"("===r||")"===r||"|"===r||"["===r||"]"===r||"{"===r||"}"===r||"*"===r||"?"===r||"\\"===r?"\\"+r:r}function e(t,n){if(Array.isArray(t))return"(?:"+t.map((function(r){return"^"+e(r,n)+"$"})).join("|")+")";var o=void 0===n.separator||n.separator,a="",i="",f=".";!0===o?(a="/",i="[/\\\\]",f="[^/\\\\]"):f=o?(i=function(e){for(var t="",n=0;n<e.length;n++)t+=r(e[n]);return t}(a=o)).length>1?"((?!"+(i="(?:"+i+")")+").)":"[^"+i+"]":".";for(var s=o?i+"+?":"",p=o?i+"*?":"",u=o?t.split(a):[t],l="",g=0;g<u.length;g++){var y=u[g],h=u[g+1],c="";if(y||!(g>0))if(o&&(c=g===u.length-1?p:"**"!==h?s:""),o&&"**"===y)c&&(l+=0===g?"":c,l+="(?:"+f+"*?"+c+")*?");else{for(var d=0;d<y.length;d++){var b=y[d];"\\"===b?d<y.length-1&&(l+=r(y[d+1]),d++):l+="?"===b?f:"*"===b?f+"*?":r(b)}l+=c}}return l}function t(r,e){if("string"!=typeof e)throw new TypeError("Sample must be a string, but "+typeof e+" given");return r.test(e)}return function(r,n){if("string"!=typeof r&&!Array.isArray(r))throw new TypeError("The first argument must be a single pattern string or an array of patterns, but "+typeof r+" given");if("string"!=typeof n&&"boolean"!=typeof n||(n={separator:n}),2===arguments.length&&void 0!==n&&("object"!=typeof n||null===n||Array.isArray(n)))throw new TypeError("The second argument must be an options object or a string/boolean separator, but "+typeof n+" given");if("\\"===(n=n||{}).separator)throw new Error("\\ is not a valid separator");var o=e(r,n),a=new RegExp("^"+o+"$",n.flags),i=t.bind(null,a);return i.options=n,i.pattern=r,i.regexp=a,i}}));
//# sourceMappingURL=index.umd.js.map
